%% Clean Up
clear; close all; clc;


%% Import Data
data_2min_all = readmatrix('test_2min_all_3');
time2min_all = data_2min_all(:,1);

shakerAccel2min_all = data_2min_all(:,2);
accel1_2min_all = data_2min_all(:,3);
accel2_2min_all = data_2min_all(:,4);
accel3_2min_all = data_2min_all(:,5);

%We don't need to use these columns since they are integrated, use the
%acceleration
shakerDisp_2min_all = data_2min_all(:,6);
disp1_2min_all = data_2min_all(:,7);
disp2_2min_all = data_2min_all(:,8);
disp3_2min_all = data_2min_all(:,9);
disp4_2min_all = data_2min_all(:,10);


%% Analysis
%Determine the frequency
%Perform a fourier transform
numData = length(data_2min_all(:,1)); %Number of data points
sampFreq = length(time2min_all) / time2min_all(end); %Samples per second


freqVec = (0:numData-1) * sampFreq / numData;
FT_disp1 = (1/numData) * fft(accel1_2min_all);
FT_disp2 = (1/numData) * fft(accel2_2min_all);
FT_disp3 = (1/numData) * fft(accel3_2min_all);


figure();
subplot(3,1,1)
plot(freqVec, abs(FT_disp1), 'linewidth', 2);
xlim([0 50]);

subplot(3,1,2)
plot(freqVec, abs(FT_disp2), 'linewidth', 2);
xlim([0 50]);

subplot(3,1,3)
plot(freqVec, abs(FT_disp3), 'linewidth', 2);
xlim([0 50]);




%% Plotting
%Want a plot of the response of the system as a function of excitation
%frequency


%% Functions
function [timeFinal, frequencies] = calcFrequency(time, accelVec)
    %This function calculates the frequencies using the time and
    %acceleration vector
    
    %Loop through and determine the relative maximum in
    %the acceleration vector
    logVec = zeros(length(accelVec),1);
    for i = 2:length(accelVec)-1
        if(accelVec(i) > accelVec(i-1) && accelVec(i) > accelVec(i+1)) %Condition for relative max
            logVec(i) = 1;        
        end  
    end
    
    %The number of total oscillations of the experiment
    totalOscillations = sum(logVec);
    
    %Relevant times for the maximum
    timeLog = logVec == 1;
    timeFinal = time(timeLog);
    
    %Determine the frequencies
    for i = 2:totalOscillations %Looping through and determining all of the frequencies
        changeTime = timeFinal(i) - timeFinal(i-1); %Change in time for the oscillation
        frequencies(i-1) = 1 / changeTime;
    end
    
end


function [fft1, fft2, fft3] = plotFFT(data)
%Input: The raw data file
%Output: the FFT data for each sensor and a plot with each sensor

time = data(:,1);
accell1 = data(:,3);
accell2 = data(:,4);
accell3 = data(:,5);


%Determine the frequency
%Perform a fourier transform
numData = length(data(:,1)); %Number of data points
sampFreq = length(time) / time(end); %Samples per second


freqVec = (0:numData-1) * sampFreq / numData;
FT_disp1 = (1/numData) * fft(accel1_2min_all);
FT_disp2 = (1/numData) * fft(accel2_2min_all);
FT_disp3 = (1/numData) * fft(accel3_2min_all);


figure();
subplot(3,1,1)
plot(freqVec, abs(FT_disp1), 'linewidth', 2);
xlim([0 50]);

subplot(3,1,2)
plot(freqVec, abs(FT_disp2), 'linewidth', 2);
xlim([0 50]);

subplot(3,1,3)
plot(freqVec, abs(FT_disp3), 'linewidth', 2);
xlim([0 50]);



end



